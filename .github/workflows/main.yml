name: Build Google Kernel + Lindroid DRM private fix

on:
  workflow_dispatch:

env:
  PATCH_REPO: Linux-on-droid/lindroid-drm-loopback
  KERNEL_BRANCH: android-gs-pantah-5.10-android13-qpr3
  CLANG_VERSION: r416183b

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    # 1Ô∏è‚É£ Checkout repo utama
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2Ô∏è‚É£ Install dependencies
    - run: |
        sudo apt update
        sudo apt install -y git bc bison build-essential flex lld \
          libssl-dev libncurses5-dev libncursesw5-dev python3 python3-pip \
          rsync cpio zip wget unzip libelf-dev dwarves device-tree-compiler

    # Install Bazel
    - name: Install Bazel
      run: |
        sudo apt update
        sudo apt install -y apt-transport-https curl gnupg
        curl -fsSL https://bazel.build/bazel-release.pub.gpg | sudo gpg --dearmor -o /usr/share/keyrings/bazel-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
        sudo apt update
        sudo apt install -y bazel-5.3.0
        sudo ln -sf /usr/bin/bazel-5.3.0 /usr/bin/bazel
  

    # 3Ô∏è‚É£ Clone kernel repos
    - name: Clone Google Kernel repos
      run: |
        mkdir -p google-kernel
        cd google-kernel

        # Kernel GS (private tree)
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/gs private/gs-google

        # Build & configs
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/build kernel/build
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/configs kernel/configs

        # Common kernel
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/common common

        # Mkbootimg
        git clone --depth=1 https://android.googlesource.com/platform/system/tools/mkbootimg tools/mkbootimg

        # Dummy boot-artifacts
        mkdir -p prebuilts/boot-artifacts/kernel

        cd ..

    # 4Ô∏è‚É£ Checkout Lindroid DRM Patch
    - name: Checkout Lindroid DRM Patch
      uses: actions/checkout@v4
      with:
        repository: ${{ env.PATCH_REPO }}
        path: drm-dkms

    # 5Ô∏è‚É£ Apply Lindroid DRM Patch
    - name: Apply Lindroid DRM Patch
      run: |
        mkdir -p google-kernel/common/drivers/lindroid-drm
        cp -r drm-dkms/* google-kernel/common/drivers/lindroid-drm/
        echo 'obj-y += lindroid-drm/' >> google-kernel/common/drivers/Makefile
        echo 'source "drivers/lindroid-drm/Kconfig"' >> google-kernel/common/drivers/Kconfig

    # 6Ô∏è‚É£ Clone Google modules
    - name: Clone Google Modules
      run: |
        cd google-kernel
        MODULES=(aoc aoc-ipc display gpu gxp/gs201 edgetpu/abrolhos edgetpu/janeiro
                 power/reset amplifiers bluetooth/synaptics bluetooth/broadcom bluetooth/qcom
                 bms fingerprint/fpc fingerprint/goodix touch/himax_touch lwis misc
                 sensors/hall_sensor touch/common touch/goodix_touch touch/focaltech_touch
                 touch/fts_touch touch/novatek_touch touch/sec_touch touch/synaptics_touch
                 uwb uwb-diags nfc wlan/bcmdhd/bcm4389 wlan/wlan_ptracker wlan/qcom/wcn6740/cnss2
                 wlan/qcom/wcn6740/wlan video/gchips)

        for mod in "${MODULES[@]}"; do
          git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/google-modules/$mod kernel/google-modules/$mod \
            || git clone --depth=1 https://android.googlesource.com/kernel/google-modules/$mod kernel/google-modules/$mod
        done

        cd ..

    # 7Ô∏è‚É£ Setup Bazel & build kernel (fallback ke gki_defconfig kalau Kleaf gagal)
    - name: Build Kernel
      run: |
        set -e
        cd google-kernel/private/gs-google

        echo "üöÄ Coba build pakai build_cloudripper.sh..."
        if ./build_cloudripper.sh; then
            echo "‚úÖ build_cloudripper.sh sukses"
        else
            echo "‚ö†Ô∏è build_cloudripper.sh gagal, fallback ke gki_defconfig"
            export PATH=/usr/lib/llvm-14/bin:$PATH
            make ARCH=arm64 gki_defconfig
            make -j$(nproc) ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-gnu- Image.lz4 dtbo.img
        fi
    # 8Ô∏è‚É£ Collect artifacts
    - name: Collect Build Outputs
      run: |
        mkdir -p artifacts
        cp google-kernel/private/gs-google/out/arch/arm64/boot/Image.lz4 artifacts/ || true
        cp google-kernel/private/gs-google/out/arch/arm64/boot/dts/google/*.dtb artifacts/ || true
        cp google-kernel/private/gs-google/out/arch/arm64/boot/dts/google/*.dtbo artifacts/ || true
        cp google-kernel/private/gs-google/out/boot.img artifacts/ || true
        cp google-kernel/private/gs-google/out/System.map artifacts/ || true
        cp google-kernel/private/gs-google/out/vmlinux artifacts/ || true

    # 9Ô∏è‚É£ Upload artifacts
    - uses: actions/upload-artifact@v4
      with:
        name: gki-lindroid-build
        path: artifacts
