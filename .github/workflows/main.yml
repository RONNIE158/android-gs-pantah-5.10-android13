name: Build Google Kernel + Lindroid DRM private fix

on:
  workflow_dispatch:

env:
  PATCH_REPO: Linux-on-droid/lindroid-drm-loopback
  KERNEL_BRANCH: android-gs-pantah-5.10-android13-qpr3
  CLANG_VERSION: r416183b

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    # 1️⃣ Checkout repo utama (tempat workflow ini)
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2️⃣ Install dependencies
    - run: |
        sudo apt update
        sudo apt install -y git bc bison build-essential flex lld \
          libssl-dev libncurses5-dev libncursesw5-dev python3 python3-pip \
          rsync cpio zip wget unzip libelf-dev dwarves device-tree-compiler

    # 3️⃣ Sparse checkout Google Kernel root
    - name: Sparse Checkout Google Kernel
      run: |
        mkdir -p google-kernel
        cd google-kernel
        git init
        git remote add origin https://android.googlesource.com/kernel/manifest
        git config core.sparseCheckout true

        echo "kernel/common" > .git/info/sparse-checkout
        echo "private/gs-google" >> .git/info/sparse-checkout
        echo "prebuilts/bazel" >> .git/info/sparse-checkout
        echo "kernel/configs" >> .git/info/sparse-checkout
        echo "tools/mkbootimg" >> .git/info/sparse-checkout

        git pull --depth=1 origin $KERNEL_BRANCH
        cd ..

    # 4️⃣ Checkout Lindroid DRM Patch
    - name: Checkout Lindroid DRM Patch
      uses: actions/checkout@v4
      with:
        repository: ${{ env.PATCH_REPO }}
        path: drm-dkms

    # 5️⃣ Apply Lindroid DRM Patch ke kernel-common
    - name: Apply Lindroid DRM Patch
      run: |
        mkdir -p google-kernel/kernel/common/drivers/lindroid-drm
        cp -r drm-dkms/* google-kernel/kernel/common/drivers/lindroid-drm/
        echo 'obj-y += lindroid-drm/' >> google-kernel/kernel/common/drivers/Makefile
        echo 'source "drivers/lindroid-drm/Kconfig"' >> google-kernel/kernel/common/drivers/Kconfig

    # 6️⃣ Clone remaining kernel repos & modules
    - name: Clone remaining kernel repos & modules
      run: |
        cd google-kernel

        # Kernel GS spesifik
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/gs private/gs-google

        # Build & configs
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/build kernel/build
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/configs kernel/configs

        # Mkbootimg
        git clone --depth=1 https://android.googlesource.com/platform/system/tools/mkbootimg tools/mkbootimg

        # Boot artifacts (❗wajib)
        git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/prebuilts/boot-artifacts prebuilts/boot-artifacts

        # Google modules
        MODULES=(aoc aoc-ipc display gpu gxp/gs201 edgetpu/abrolhos edgetpu/janeiro
                 power/reset amplifiers bluetooth/synaptics bluetooth/broadcom bluetooth/qcom
                 bms fingerprint/fpc fingerprint/goodix touch/himax_touch lwis misc
                 sensors/hall_sensor touch/common touch/goodix_touch touch/focaltech_touch
                 touch/fts_touch touch/novatek_touch touch/sec_touch touch/synaptics_touch
                 uwb uwb-diags nfc wlan/bcmdhd/bcm4389 wlan/wlan_ptracker wlan/qcom/wcn6740/cnss2
                 wlan/qcom/wcn6740/wlan video/gchips)

        for mod in "${MODULES[@]}"; do
            git clone --depth=1 -b $KERNEL_BRANCH https://android.googlesource.com/kernel/google-modules/$mod kernel/google-modules/$mod \
              || git clone --depth=1 https://android.googlesource.com/kernel/google-modules/$mod kernel/google-modules/$mod
        done

        cd ..

    # 7️⃣ Setup Bazel & build kernel
    - name: Setup Bazel & build kernel
      run: |
        export PATH=$PWD/google-kernel/prebuilts/bazel/linux-x86_64:$PATH
        cd google-kernel/private/gs-google
        chmod +x build_slider.sh
        ./build_slider.sh

    # 8️⃣ Collect artifacts
    - name: Collect Build Outputs
      run: |
        mkdir -p artifacts
        cp google-kernel/private/gs-google/out/arch/arm64/boot/Image.lz4 artifacts/ || true
        cp google-kernel/private/gs-google/out/arch/arm64/boot/dts/google/*.dtb artifacts/ || true
        cp google-kernel/private/gs-google/out/arch/arm64/boot/dts/google/*.dtbo artifacts/ || true
        cp google-kernel/private/gs-google/out/boot.img artifacts/ || true
        cp google-kernel/private/gs-google/out/System.map artifacts/ || true
        cp google-kernel/private/gs-google/out/vmlinux artifacts/ || true

    # 9️⃣ Upload artifacts
    - uses: actions/upload-artifact@v4
      with:
        name: gki-lindroid-build
        path: artifacts
